<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.example.source.item.mapper.UserMapper">
  <resultMap id="BaseResultMap" type="com.example.source.item.entity.User">
    <id column="id" jdbcType="INTEGER" property="id" />
    <result column="username" jdbcType="VARCHAR" property="username" />
    <result column="password" jdbcType="VARCHAR" property="password" />
    <result column="user_phone" jdbcType="VARCHAR" property="userPhone" />
    <result column="user_email" jdbcType="VARCHAR" property="userEmail" />
    <result column="create_time" jdbcType="TIMESTAMP" property="createTime" />
    <result column="update_time" jdbcType="TIMESTAMP" property="updateTime" />
    <result column="user_status" jdbcType="TINYINT" property="userStatus" />
    <result column="modifier_id" jdbcType="INTEGER" property="modifierId" />
    <result column="modifier_name" jdbcType="VARCHAR" property="modifierName" />
  </resultMap>
  <sql id="Base_Column_List">
    id, username, password, user_phone, user_email, create_time, update_time, user_status,
    modifier_id, modifier_name
  </sql>
  <select id="getUserByName" resultType="com.example.source.item.entity.User">
    select * from user where username  = #{username}
  </select>

  <select id="getUserList" resultType="com.example.source.item.dto.UserDTO">
    select u.id,u.username,u.user_phone userPhone,u.user_email userEmail,u.user_status userStatus ,u.create_time createTime,
    ui.real_name realName,ui.sex,ui.age,ui.profession,ui.address,ui.identity
    from user u LEFT JOIN user_info	ui  on u.id = ui.uid
    <where>
      <if test="username != null and username != '' ">
        and username LIKE '%' #{username} '%'
      </if>
      <if test="userPhone != null and userPhone != '' ">
        and user_phone LIKE '%' #{userPhone} '%'
      </if>
    </where>

<!--    <if test="startTime != null and startTime != '' ">-->
<!--      and u.create_time &gt; #{startTime}-->
<!--    </if>-->
<!--    <if test="endTime != null and endTime != '' ">-->
<!--      and u.create_time &lt; #{endTime}-->
<!--    </if> -->

  </select>

  <select id="selectByPrimaryKey" parameterType="java.lang.Integer" resultMap="BaseResultMap">
    select
    <include refid="Base_Column_List" />
    from user
    where id = #{id,jdbcType=INTEGER}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer">
    delete from user
    where id = #{id,jdbcType=INTEGER}
  </delete>
  <insert id="insert" parameterType="com.example.source.item.entity.User">
    insert into user (id, username, password,
      user_phone, user_email, create_time,
      update_time, user_status, modifier_id,
      modifier_name)
    values (#{id,jdbcType=INTEGER}, #{username,jdbcType=VARCHAR}, #{password,jdbcType=VARCHAR},
      #{userPhone,jdbcType=VARCHAR}, #{userEmail,jdbcType=VARCHAR}, #{createTime,jdbcType=TIMESTAMP},
      #{updateTime,jdbcType=TIMESTAMP}, #{userStatus,jdbcType=TINYINT}, #{modifierId,jdbcType=INTEGER},
      #{modifierName,jdbcType=VARCHAR})
  </insert>
  <insert id="insertSelective" useGeneratedKeys="true" keyProperty="id" parameterType="com.example.source.item.entity.User">
    insert into user
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="id != null">
        id,
      </if>
      <if test="username != null">
        username,
      </if>
      <if test="password != null">
        password,
      </if>
      <if test="userPhone != null">
        user_phone,
      </if>
      <if test="userEmail != null">
        user_email,
      </if>
      <if test="createTime != null">
        create_time,
      </if>
      <if test="updateTime != null">
        update_time,
      </if>
      <if test="userStatus != null">
        user_status,
      </if>
      <if test="modifierId != null">
        modifier_id,
      </if>
      <if test="modifierName != null">
        modifier_name,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="id != null">
        #{id,jdbcType=INTEGER},
      </if>
      <if test="username != null">
        #{username,jdbcType=VARCHAR},
      </if>
      <if test="password != null">
        #{password,jdbcType=VARCHAR},
      </if>
      <if test="userPhone != null">
        #{userPhone,jdbcType=VARCHAR},
      </if>
      <if test="userEmail != null">
        #{userEmail,jdbcType=VARCHAR},
      </if>
      <if test="createTime != null">
        #{createTime,jdbcType=TIMESTAMP},
      </if>
      <if test="updateTime != null">
        #{updateTime,jdbcType=TIMESTAMP},
      </if>
      <if test="userStatus != null">
        #{userStatus,jdbcType=TINYINT},
      </if>
      <if test="modifierId != null">
        #{modifierId,jdbcType=INTEGER},
      </if>
      <if test="modifierName != null">
        #{modifierName,jdbcType=VARCHAR},
      </if>
    </trim>
  </insert>
  <update id="updateByPrimaryKeySelective" parameterType="com.example.source.item.entity.User">
    update user
    <set>
      <if test="username != null">
        username = #{username,jdbcType=VARCHAR},
      </if>
      <if test="password != null">
        password = #{password,jdbcType=VARCHAR},
      </if>
      <if test="userPhone != null">
        user_phone = #{userPhone,jdbcType=VARCHAR},
      </if>
      <if test="userEmail != null">
        user_email = #{userEmail,jdbcType=VARCHAR},
      </if>
      <if test="createTime != null">
        create_time = #{createTime,jdbcType=TIMESTAMP},
      </if>
      <if test="updateTime != null">
        update_time = #{updateTime,jdbcType=TIMESTAMP},
      </if>
      <if test="userStatus != null">
        user_status = #{userStatus,jdbcType=TINYINT},
      </if>
      <if test="modifierId != null">
        modifier_id = #{modifierId,jdbcType=INTEGER},
      </if>
      <if test="modifierName != null">
        modifier_name = #{modifierName,jdbcType=VARCHAR},
      </if>
    </set>
    where id = #{id,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.example.source.item.entity.User">
    update user
    set username = #{username,jdbcType=VARCHAR},
      password = #{password,jdbcType=VARCHAR},
      user_phone = #{userPhone,jdbcType=VARCHAR},
      user_email = #{userEmail,jdbcType=VARCHAR},
      create_time = #{createTime,jdbcType=TIMESTAMP},
      update_time = #{updateTime,jdbcType=TIMESTAMP},
      user_status = #{userStatus,jdbcType=TINYINT},
      modifier_id = #{modifierId,jdbcType=INTEGER},
      modifier_name = #{modifierName,jdbcType=VARCHAR}
    where id = #{id,jdbcType=INTEGER}
  </update>
  <update id="updateUserStatus">
    update user set user_status = #{userStatus} where id = #{id}
  </update>
</mapper>
