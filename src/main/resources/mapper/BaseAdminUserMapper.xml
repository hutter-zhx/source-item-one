<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.example.source.item.mapper.BaseAdminUserMapper">
    <resultMap id="BaseResultMap" type="com.example.source.item.entity.BaseAdminUser">
        <id column="id" jdbcType="INTEGER" property="id"/>
        <result column="sys_user_name" jdbcType="VARCHAR" property="sysUserName"/>
        <result column="sys_user_pwd" jdbcType="VARCHAR" property="sysUserPwd"/>
        <result column="role_id" jdbcType="INTEGER" property="roleId"/>
        <result column="user_phone" jdbcType="VARCHAR" property="userPhone"/>
        <result column="create_time" jdbcType="TIMESTAMP" property="createTime"/>
        <result column="update_time" jdbcType="TIMESTAMP" property="updateTime"/>
        <result column="user_status" jdbcType="INTEGER" property="userStatus"/>
    </resultMap>

<!--    <resultMap id="BaseResultSet" type="com.example.source.item.entity.BaseAdminUser">-->
<!--        <id column="id" jdbcType="INTEGER" property="id"/>-->
<!--        <result column="sys_user_name" jdbcType="VARCHAR" property="sysUserName"/>-->
<!--        <result column="sys_user_pwd" jdbcType="VARCHAR" property="sysUserPwd"/>-->
<!--        <result column="role_id" jdbcType="INTEGER" property="roleId"/>-->
<!--        <result column="user_phone" jdbcType="VARCHAR" property="userPhone"/>-->
<!--        <result column="create_time" jdbcType="TIMESTAMP" property="createTime"/>-->
<!--        <result column="update_time" jdbcType="TIMESTAMP" property="updateTime"/>-->
<!--        <result column="user_status" jdbcType="INTEGER" property="userStatus"/>-->
<!--        <collection property="adminRoleSet" javaType="java.util.HashSet"-->
<!--                    ofType="com.example.source.item.entity.BaseAdminRole">-->
<!--            <id column="id" jdbcType="INTEGER" property="id"/>-->
<!--            <result column="role_name" jdbcType="VARCHAR" property="roleName"/>-->
<!--            <result column="role_desc" jdbcType="VARCHAR" property="roleDesc"/>-->
<!--            <result column="permissions" jdbcType="VARCHAR" property="permissions"/>-->
<!--            <result column="create_time" jdbcType="VARCHAR" property="createTime"/>-->
<!--            <result column="update_time" jdbcType="VARCHAR" property="updateTime"/>-->
<!--            <result column="role_status" jdbcType="INTEGER" property="roleStatus"/>-->
<!--        </collection>-->
<!--    </resultMap>-->

    <sql id="Base_Column_List">
    id, sys_user_name, sys_user_pwd, role_id, user_phone, create_time, update_time, user_status
  </sql>

<!--    <select id="getRoles" resultMap="BaseResultSet">-->
<!--        select * from base_admin_user u,base_admin_role r where u.role_id = r.id and u.sys_user_name = #{sysUserName}-->
<!--  </select>-->
    <select id="selectByRoleName" resultMap="BaseResultMap">
     select * from base_admin_user u,base_admin_role r where u.role_id = r.id and u.sys_user_name = #{sysUserName}
  </select>
    <select id="selectByAdminUserName" parameterType="java.lang.String" resultMap="BaseResultMap">
    select * from  base_admin_user where sys_user_name =#{sysUserName} and user_status = 1
  </select>
    <select id="getAdminUserList" resultType="com.example.source.item.dto.AdminUserDTO">
        select u.id,u.sys_user_name as sysUserName ,u.user_status as userStatus,
        u.create_time as createTime,u.user_phone as userPhone,u.role_id roleId,r.role_name roleName from base_admin_user
        u,base_admin_role r
        where u.role_id=r.id
            <if test="sysUserName != null and sysUserName != '' ">
                and sys_user_name LIKE '%' #{sysUserName} '%'
            </if>
            <if test="userPhone != null and userPhone != '' ">
                and user_phone LIKE '%' #{userPhone} '%'
            </if>
            <if test="startTime != null and startTime != '' ">
                and u.create_time &gt; #{startTime}
            </if>
            <if test="endTime != null and endTime != '' ">
                and u.create_time &lt; #{endTime}
            </if>

    </select>

    <select id="selectByPrimaryKey" parameterType="java.lang.Integer" resultMap="BaseResultMap">
        select
        <include refid="Base_Column_List"/>
        from base_admin_user
        where id = #{id,jdbcType=INTEGER}
    </select>
    <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer">
    delete from base_admin_user
    where id = #{id,jdbcType=INTEGER}
  </delete>
    <insert id="insert" parameterType="com.example.source.item.entity.BaseAdminUser">
    insert into base_admin_user (id, sys_user_name, sys_user_pwd,
      role_id, user_phone, create_time,
      update_time, user_status)
    values (#{id,jdbcType=INTEGER}, #{sysUserName,jdbcType=VARCHAR}, #{sysUserPwd,jdbcType=VARCHAR},
      #{roleId,jdbcType=INTEGER}, #{userPhone,jdbcType=VARCHAR}, #{createTime,jdbcType=TIMESTAMP},
      #{updateTime,jdbcType=TIMESTAMP}, #{userStatus,jdbcType=INTEGER})
  </insert>
    <insert id="insertSelective" parameterType="com.example.source.item.entity.BaseAdminUser">
        insert into base_admin_user
        <trim prefix="(" suffix=")" suffixOverrides=",">
            <if test="id != null">
                id,
            </if>
            <if test="sysUserName != null">
                sys_user_name,
            </if>
            <if test="sysUserPwd != null">
                sys_user_pwd,
            </if>
            <if test="roleId != null">
                role_id,
            </if>
            <if test="userPhone != null">
                user_phone,
            </if>
            <if test="createTime != null">
                create_time,
            </if>
            <if test="updateTime != null">
                update_time,
            </if>
            <if test="userStatus != null">
                user_status,
            </if>
        </trim>
        <trim prefix="values (" suffix=")" suffixOverrides=",">
            <if test="id != null">
                #{id,jdbcType=INTEGER},
            </if>
            <if test="sysUserName != null">
                #{sysUserName,jdbcType=VARCHAR},
            </if>
            <if test="sysUserPwd != null">
                #{sysUserPwd,jdbcType=VARCHAR},
            </if>
            <if test="roleId != null">
                #{roleId,jdbcType=INTEGER},
            </if>
            <if test="userPhone != null">
                #{userPhone,jdbcType=VARCHAR},
            </if>
            <if test="createTime != null">
                #{createTime,jdbcType=TIMESTAMP},
            </if>
            <if test="updateTime != null">
                #{updateTime,jdbcType=TIMESTAMP},
            </if>
            <if test="userStatus != null">
                #{userStatus,jdbcType=INTEGER},
            </if>
        </trim>
    </insert>
    <update id="updateAdminUserStatus">
         UPDATE base_admin_user
        SET user_status = #{userStatus}
        WHERE id = #{id}
  </update>
    <update id="updateByPrimaryKeySelective" parameterType="com.example.source.item.entity.BaseAdminUser">
        update base_admin_user
        <set>
            <if test="sysUserName != null">
                sys_user_name = #{sysUserName,jdbcType=VARCHAR},
            </if>
            <if test="sysUserPwd != null">
                sys_user_pwd = #{sysUserPwd,jdbcType=VARCHAR},
            </if>
            <if test="roleId != null">
                role_id = #{roleId,jdbcType=INTEGER},
            </if>
            <if test="userPhone != null">
                user_phone = #{userPhone,jdbcType=VARCHAR},
            </if>
            <if test="createTime != null">
                create_time = #{createTime,jdbcType=TIMESTAMP},
            </if>
            <if test="updateTime != null">
                update_time = #{updateTime,jdbcType=TIMESTAMP},
            </if>
            <if test="userStatus != null">
                user_status = #{userStatus,jdbcType=INTEGER},
            </if>
        </set>
        where id = #{id,jdbcType=INTEGER}
    </update>
    <update id="updateByPrimaryKey" parameterType="com.example.source.item.entity.BaseAdminUser">
    update base_admin_user
    set sys_user_name = #{sysUserName,jdbcType=VARCHAR},
      sys_user_pwd = #{sysUserPwd,jdbcType=VARCHAR},
      role_id = #{roleId,jdbcType=INTEGER},
      user_phone = #{userPhone,jdbcType=VARCHAR},
      create_time = #{createTime,jdbcType=TIMESTAMP},
      update_time = #{updateTime,jdbcType=TIMESTAMP},
      user_status = #{userStatus,jdbcType=INTEGER}
    where id = #{id,jdbcType=INTEGER}
  </update>
</mapper>
